// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "02/21/2024 13:49:04"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          PBL3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module PBL3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CH0;
reg CH1;
reg CH2;
reg clk;
// wires                                               
wire [6:0] OUT;
wire dig0;
wire dig1;
wire dig2;
wire dig3;
wire [3:0] teste_deze_gar;
wire [1:0] teste_deze_rol;
wire [3:0] teste_uni_gar;
wire [3:0] teste_uni_rol;

// assign statements (if any)                          
PBL3 i1 (
// port map - connection between master ports and signals/registers   
	.CH0(CH0),
	.CH1(CH1),
	.CH2(CH2),
	.OUT(OUT),
	.clk(clk),
	.dig0(dig0),
	.dig1(dig1),
	.dig2(dig2),
	.dig3(dig3),
	.teste_deze_gar(teste_deze_gar),
	.teste_deze_rol(teste_deze_rol),
	.teste_uni_gar(teste_uni_gar),
	.teste_uni_rol(teste_uni_rol)
);
initial 
begin 
#1000000 $finish;
end 

// CH1
initial
begin
	CH1 = 1'b0;
	CH1 = #10000 1'b1;
	CH1 = #10000 1'b0;
end 

// CH0
initial
begin
	CH0 = 1'b0;
end 

// CH2
always
begin
	CH2 = 1'b0;
	CH2 = #5000 1'b1;
	#5000;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #5000 1'b1;
	#5000;
end 
endmodule

